{"repository_name":"github.com/plainas/matrix","body":"# matrix [![Build Status](https://travis-ci.org/Exilor/matrix.svg?branch=master)](https://travis-ci.org/Exilor/matrix)\n\n\nThis is a Matrix class for [Crystal](https://github.com/crystal-lang/crystal).\nThere are a few ways to create a Matrix:\n```crystal\n# Creates a Matrix of Int32 with 3 rows and 2 columns. A Tuple of rows can also \n# be used instead of an array. Each row must have the same number of elements.\nMatrix.rows([[1, 2], [3, 4], [5, 6]]) \n# 1, 2\n# 3, 4\n# 5, 6\n\n# Creates a Matrix with 2 rows and 3 columns. Like with Matrix.rows, the columns \n# must have the same number of elements.\nMatrix.columns([[1, 2], [3, 4], [5, 6]])\n# 1, 3, 5\n# 2, 4, 6\n\n# A Matrix can also be created by giving its number of columns and rows, just \n# like an Array can be created by giving it a starting size. This constructor \n# will yield the linear index, the current row and the current column.\nMatrix.new(2, 2) { |idx, row, col| idx  }\n# 0, 1\n# 2, 3\nMatrix.new(2, 2) { |idx, row, col| row  }\n# 0, 0\n# 1, 1\nMatrix.new(2, 2) { |idx, row, col| col  }\n # 0, 1\n # 0, 1\n```\n\nMost methods are documented in the matrix.cr file itself.\n","program":{"html_id":"github.com/plainas/matrix/toplevel","path":"toplevel.html","kind":"module","full_name":"Top Level Namespace","name":"Top Level Namespace","abstract":false,"superclass":null,"ancestors":[],"locations":[],"repository_name":"github.com/plainas/matrix","program":true,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":null,"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[{"html_id":"github.com/plainas/matrix/Matrix","path":"Matrix.html","kind":"struct","full_name":"Matrix(T)","name":"Matrix","abstract":false,"superclass":{"html_id":"github.com/plainas/matrix/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"github.com/plainas/matrix/Iterable","kind":"module","full_name":"Iterable","name":"Iterable"},{"html_id":"github.com/plainas/matrix/Enumerable","kind":"module","full_name":"Enumerable","name":"Enumerable"},{"html_id":"github.com/plainas/matrix/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"github.com/plainas/matrix/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"github.com/plainas/matrix/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"matrix.cr","line_number":1,"url":"https://github.com/plainas/matrix/blob/c15a51feb06cc0b02f69dc8da45e629e29f53449/src/matrix.cr"}],"repository_name":"github.com/plainas/matrix","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[{"html_id":"github.com/plainas/matrix/Enumerable","kind":"module","full_name":"Enumerable","name":"Enumerable"},{"html_id":"github.com/plainas/matrix/Iterable","kind":"module","full_name":"Iterable","name":"Iterable"}],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":null,"doc":null,"summary":null,"class_methods":[{"id":"[](*rows)-class-method","html_id":"[](*rows)-class-method","name":"[]","doc":"Alias for Matrix.rows.","summary":"<p>Alias for Matrix.rows.</p>","abstract":false,"args":[{"name":"rows","doc":null,"default_value":"","external_name":"rows","restriction":""}],"args_string":"(*rows)","source_link":"https://github.com/plainas/matrix/blob/c15a51feb06cc0b02f69dc8da45e629e29f53449/src/matrix.cr#L108","source_link":"https://github.com/plainas/matrix/blob/c15a51feb06cc0b02f69dc8da45e629e29f53449/src/matrix.cr#L108","def":{"name":"[]","args":[{"name":"rows","doc":null,"default_value":"","external_name":"rows","restriction":""}],"double_splat":null,"splat_index":0,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"rows(rows)"}},{"id":"column(*values)-class-method","html_id":"column(*values)-class-method","name":"column","doc":"Creates a single column matrix with the given values.","summary":"<p>Creates a single column matrix with the given values.</p>","abstract":false,"args":[{"name":"values","doc":null,"default_value":"","external_name":"values","restriction":""}],"args_string":"(*values)","source_link":"https://github.com/plainas/matrix/blob/c15a51feb06cc0b02f69dc8da45e629e29f53449/src/matrix.cr#L101","source_link":"https://github.com/plainas/matrix/blob/c15a51feb06cc0b02f69dc8da45e629e29f53449/src/matrix.cr#L101","def":{"name":"column","args":[{"name":"values","doc":null,"default_value":"","external_name":"values","restriction":""}],"double_splat":null,"splat_index":0,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Matrix.new(values.size, 1) do |i|\n  values[i]\nend"}},{"id":"columns(columns:Array(Array)|Tuple)-class-method","html_id":"columns(columns:Array(Array)|Tuple)-class-method","name":"columns","doc":"Creates a matrix interpreting each argument as a column.","summary":"<p>Creates a matrix interpreting each argument as a column.</p>","abstract":false,"args":[{"name":"columns","doc":null,"default_value":"","external_name":"columns","restriction":"Array(Array) | Tuple"}],"args_string":"(columns : Array(Array) | Tuple)","source_link":"https://github.com/plainas/matrix/blob/c15a51feb06cc0b02f69dc8da45e629e29f53449/src/matrix.cr#L67","source_link":"https://github.com/plainas/matrix/blob/c15a51feb06cc0b02f69dc8da45e629e29f53449/src/matrix.cr#L67","def":{"name":"columns","args":[{"name":"columns","doc":null,"default_value":"","external_name":"columns","restriction":"Array(Array) | Tuple"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if columns.any? do |column|\n  column.size != columns[0].size\nend\n  raise(NotRegular.new)\nend\nMatrix.new(columns.first.size, columns.size) do |i, r, c|\n  columns[c][r]\nend\n"}},{"id":"diagonal(*values)-class-method","html_id":"diagonal(*values)-class-method","name":"diagonal","doc":"Creates a diagonal matrix with the supplied arguments. Best suited to\nnumeric matrices.","summary":"<p>Creates a diagonal matrix with the supplied arguments.</p>","abstract":false,"args":[{"name":"values","doc":null,"default_value":"","external_name":"values","restriction":""}],"args_string":"(*values)","source_link":"https://github.com/plainas/matrix/blob/c15a51feb06cc0b02f69dc8da45e629e29f53449/src/matrix.cr#L78","source_link":"https://github.com/plainas/matrix/blob/c15a51feb06cc0b02f69dc8da45e629e29f53449/src/matrix.cr#L78","def":{"name":"diagonal","args":[{"name":"values","doc":null,"default_value":"","external_name":"values","restriction":""}],"double_splat":null,"splat_index":0,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"matrix = Matrix(T).new(values.size, values.size)\nvalues.each_with_index do |e, i|\n  matrix[i, i] = e\nend\nmatrix\n"}},{"id":"identity(row_or_col_size:Int)-class-method","html_id":"identity(row_or_col_size:Int)-class-method","name":"identity","doc":"Creates a Matrix(Int32), whose diagonal values are 1 and the rest are 0.","summary":"<p>Creates a Matrix(Int32), whose diagonal values are 1 and the rest are 0.</p>","abstract":false,"args":[{"name":"row_or_col_size","doc":null,"default_value":"","external_name":"row_or_col_size","restriction":"Int"}],"args_string":"(row_or_col_size : Int)","source_link":"https://github.com/plainas/matrix/blob/c15a51feb06cc0b02f69dc8da45e629e29f53449/src/matrix.cr#L87","source_link":"https://github.com/plainas/matrix/blob/c15a51feb06cc0b02f69dc8da45e629e29f53449/src/matrix.cr#L87","def":{"name":"identity","args":[{"name":"row_or_col_size","doc":null,"default_value":"","external_name":"row_or_col_size","restriction":"Int"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Matrix.new(row_or_col_size, row_or_col_size) do |i, r, c|\n  r == c ? 1 : 0\nend"}},{"id":"row(*values)-class-method","html_id":"row(*values)-class-method","name":"row","doc":"Creates a single row matrix with the given values.","summary":"<p>Creates a single row matrix with the given values.</p>","abstract":false,"args":[{"name":"values","doc":null,"default_value":"","external_name":"values","restriction":""}],"args_string":"(*values)","source_link":"https://github.com/plainas/matrix/blob/c15a51feb06cc0b02f69dc8da45e629e29f53449/src/matrix.cr#L94","source_link":"https://github.com/plainas/matrix/blob/c15a51feb06cc0b02f69dc8da45e629e29f53449/src/matrix.cr#L94","def":{"name":"row","args":[{"name":"values","doc":null,"default_value":"","external_name":"values","restriction":""}],"double_splat":null,"splat_index":0,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Matrix.new(1, values.size) do |i|\n  values[i]\nend"}},{"id":"rows(rows:Array(Array)|Tuple)-class-method","html_id":"rows(rows:Array(Array)|Tuple)-class-method","name":"rows","doc":"Creates a matrix interpreting each argument as a row.","summary":"<p>Creates a matrix interpreting each argument as a row.</p>","abstract":false,"args":[{"name":"rows","doc":null,"default_value":"","external_name":"rows","restriction":"Array(Array) | Tuple"}],"args_string":"(rows : Array(Array) | Tuple)","source_link":"https://github.com/plainas/matrix/blob/c15a51feb06cc0b02f69dc8da45e629e29f53449/src/matrix.cr#L57","source_link":"https://github.com/plainas/matrix/blob/c15a51feb06cc0b02f69dc8da45e629e29f53449/src/matrix.cr#L57","def":{"name":"rows","args":[{"name":"rows","doc":null,"default_value":"","external_name":"rows","restriction":"Array(Array) | Tuple"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if rows.any? do |row|\n  row.size != rows[0].size\nend\n  raise(NotRegular.new)\nend\nMatrix.new(rows.size, rows.first.size) do |i, r, c|\n  rows[r][c]\nend\n"}}],"constructors":[{"id":"new(rows:Int,columns:Int,value:T)-class-method","html_id":"new(rows:Int,columns:Int,value:T)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"rows","doc":null,"default_value":"","external_name":"rows","restriction":"Int"},{"name":"columns","doc":null,"default_value":"","external_name":"columns","restriction":"Int"},{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"T"}],"args_string":"(rows : Int, columns : Int, value : T)","source_link":"https://github.com/plainas/matrix/blob/c15a51feb06cc0b02f69dc8da45e629e29f53449/src/matrix.cr#L31","source_link":"https://github.com/plainas/matrix/blob/c15a51feb06cc0b02f69dc8da45e629e29f53449/src/matrix.cr#L31","def":{"name":"new","args":[{"name":"rows","doc":null,"default_value":"","external_name":"rows","restriction":"Int"},{"name":"columns","doc":null,"default_value":"","external_name":"columns","restriction":"Int"},{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"T"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = Matrix(T).allocate\n_.initialize(rows, columns, value)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"id":"new(rows:Int,columns:Int)-class-method","html_id":"new(rows:Int,columns:Int)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"rows","doc":null,"default_value":"","external_name":"rows","restriction":"Int"},{"name":"columns","doc":null,"default_value":"","external_name":"columns","restriction":"Int"}],"args_string":"(rows : Int, columns : Int)","source_link":"https://github.com/plainas/matrix/blob/c15a51feb06cc0b02f69dc8da45e629e29f53449/src/matrix.cr#L26","source_link":"https://github.com/plainas/matrix/blob/c15a51feb06cc0b02f69dc8da45e629e29f53449/src/matrix.cr#L26","def":{"name":"new","args":[{"name":"rows","doc":null,"default_value":"","external_name":"rows","restriction":"Int"},{"name":"columns","doc":null,"default_value":"","external_name":"columns","restriction":"Int"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = Matrix(T).allocate\n_.initialize(rows, columns)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"id":"new(rows:Int,columns:Int,&block:Int32,Int32,Int32->T)-class-method","html_id":"new(rows:Int,columns:Int,&amp;block:Int32,Int32,Int32-&gt;T)-class-method","name":"new","doc":"Creates a matrix with the given number of rows and columns. It yields the\nlinear, row and column indexes in that order.","summary":"<p>Creates a matrix with the given number of rows and columns.</p>","abstract":false,"args":[{"name":"rows","doc":null,"default_value":"","external_name":"rows","restriction":"Int"},{"name":"columns","doc":null,"default_value":"","external_name":"columns","restriction":"Int"}],"args_string":"(rows : Int, columns : Int, &block : Int32, Int32, Int32 -> T)","source_link":"https://github.com/plainas/matrix/blob/c15a51feb06cc0b02f69dc8da45e629e29f53449/src/matrix.cr#L38","source_link":"https://github.com/plainas/matrix/blob/c15a51feb06cc0b02f69dc8da45e629e29f53449/src/matrix.cr#L38","def":{"name":"new","args":[{"name":"rows","doc":null,"default_value":"","external_name":"rows","restriction":"Int"},{"name":"columns","doc":null,"default_value":"","external_name":"columns","restriction":"Int"}],"double_splat":null,"splat_index":null,"yields":3,"block_arg":{"name":"block","doc":null,"default_value":"","external_name":"block","restriction":"(Int32, Int32, Int32 -> T)"},"return_type":"","visibility":"Public","body":"(Matrix(T).new(rows, columns)).tap do |m|\n  r, c = 0, 0\n  m.size.times do |i|\n    m[i] = yield i, r, c\n    c = c + 1\n    if r == rows\n      c = c + 1\n      r = 0\n    end\n    if c == columns\n      r = r + 1\n      c = 0\n    end\n  end\nend"}}],"instance_methods":[{"id":"&(other:T|Number)-instance-method","html_id":"&amp;(other:T|Number)-instance-method","name":"&","doc":null,"summary":null,"abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"T | Number"}],"args_string":"(other : T | Number)","source_link":"https://github.com/plainas/matrix/blob/c15a51feb06cc0b02f69dc8da45e629e29f53449/src/matrix.cr#L20","source_link":"https://github.com/plainas/matrix/blob/c15a51feb06cc0b02f69dc8da45e629e29f53449/src/matrix.cr#L20","def":{"name":"&","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"T | Number"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"map do |e|\n  e & other\nend"}},{"id":"*(other:Matrix)-instance-method","html_id":"*(other:Matrix)-instance-method","name":"*","doc":"Performs multiplication with another matrix.","summary":"<p>Performs multiplication with another matrix.</p>","abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"Matrix"}],"args_string":"(other : Matrix)","source_link":"https://github.com/plainas/matrix/blob/c15a51feb06cc0b02f69dc8da45e629e29f53449/src/matrix.cr#L234","source_link":"https://github.com/plainas/matrix/blob/c15a51feb06cc0b02f69dc8da45e629e29f53449/src/matrix.cr#L234","def":{"name":"*","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"Matrix"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if @columns == other.row_count\nelse\n  raise(DimensionMismatch.new)\nend\nnew_rows, new_cols = @rows, other.column_count\n(Matrix(typeof(self[0] * other[0])).new(new_rows, new_cols)).tap do |m|\n  pos = -1\n  @rows.times do |i|\n    new_cols.times do |j|\n      n = (0...@columns).reduce(0) do |memo, k|\n        memo + ((at(i, k)) * other[k, j])\n      end\n      m[pos = pos + 1] = (typeof(self[0] * other[0])).new(n)\n    end\n  end\nend\n"}},{"id":"*(other:T|Number)-instance-method","html_id":"*(other:T|Number)-instance-method","name":"*","doc":null,"summary":null,"abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"T | Number"}],"args_string":"(other : T | Number)","source_link":"https://github.com/plainas/matrix/blob/c15a51feb06cc0b02f69dc8da45e629e29f53449/src/matrix.cr#L20","source_link":"https://github.com/plainas/matrix/blob/c15a51feb06cc0b02f69dc8da45e629e29f53449/src/matrix.cr#L20","def":{"name":"*","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"T | Number"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"map do |e|\n  e * other\nend"}},{"id":"**(other:Int)-instance-method","html_id":"**(other:Int)-instance-method","name":"**","doc":"Performs exponentiation","summary":"<p>Performs exponentiation</p>","abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"Int"}],"args_string":"(other : Int)","source_link":"https://github.com/plainas/matrix/blob/c15a51feb06cc0b02f69dc8da45e629e29f53449/src/matrix.cr#L249","source_link":"https://github.com/plainas/matrix/blob/c15a51feb06cc0b02f69dc8da45e629e29f53449/src/matrix.cr#L249","def":{"name":"**","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"Int"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"m = self\nif other == 0\n  Matrix.identity(@columns)\nelse\n  if other < 0\n    (repeated_square_power(other.abs)).inverse\n  else\n    if other == 1\n      clone\n    else\n      repeated_square_power(other)\n    end\n  end\nend\n"}},{"id":"+(other:Matrix)-instance-method","html_id":"+(other:Matrix)-instance-method","name":"+","doc":"Performs addition with another matrix.","summary":"<p>Performs addition with another matrix.</p>","abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"Matrix"}],"args_string":"(other : Matrix)","source_link":"https://github.com/plainas/matrix/blob/c15a51feb06cc0b02f69dc8da45e629e29f53449/src/matrix.cr#L203","source_link":"https://github.com/plainas/matrix/blob/c15a51feb06cc0b02f69dc8da45e629e29f53449/src/matrix.cr#L203","def":{"name":"+","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"Matrix"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if dimensions == other.dimensions\nelse\n  raise(DimensionMismatch.new)\nend\nMatrix.new(@rows, @columns) do |i|\n  (at(i)) + other[i]\nend\n"}},{"id":"+(other:T|Number)-instance-method","html_id":"+(other:T|Number)-instance-method","name":"+","doc":null,"summary":null,"abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"T | Number"}],"args_string":"(other : T | Number)","source_link":"https://github.com/plainas/matrix/blob/c15a51feb06cc0b02f69dc8da45e629e29f53449/src/matrix.cr#L20","source_link":"https://github.com/plainas/matrix/blob/c15a51feb06cc0b02f69dc8da45e629e29f53449/src/matrix.cr#L20","def":{"name":"+","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"T | Number"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"map do |e|\n  e + other\nend"}},{"id":"-(other:Matrix)-instance-method","html_id":"-(other:Matrix)-instance-method","name":"-","doc":"Performs subtraction with another matrix.","summary":"<p>Performs subtraction with another matrix.</p>","abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"Matrix"}],"args_string":"(other : Matrix)","source_link":"https://github.com/plainas/matrix/blob/c15a51feb06cc0b02f69dc8da45e629e29f53449/src/matrix.cr#L211","source_link":"https://github.com/plainas/matrix/blob/c15a51feb06cc0b02f69dc8da45e629e29f53449/src/matrix.cr#L211","def":{"name":"-","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"Matrix"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if dimensions == other.dimensions\nelse\n  raise(DimensionMismatch.new)\nend\nMatrix.new(@rows, @columns) do |i|\n  (at(i)) - other[i]\nend\n"}},{"id":"-(other:T|Number)-instance-method","html_id":"-(other:T|Number)-instance-method","name":"-","doc":null,"summary":null,"abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"T | Number"}],"args_string":"(other : T | Number)","source_link":"https://github.com/plainas/matrix/blob/c15a51feb06cc0b02f69dc8da45e629e29f53449/src/matrix.cr#L20","source_link":"https://github.com/plainas/matrix/blob/c15a51feb06cc0b02f69dc8da45e629e29f53449/src/matrix.cr#L20","def":{"name":"-","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"T | Number"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"map do |e|\n  e - other\nend"}},{"id":"--instance-method","html_id":"--instance-method","name":"-","doc":"Returns a new matrix of the same size after calling the unary #- method\non every element. Best suited to numeric matrices.","summary":"<p>Returns a new matrix of the same size after calling the unary #- method on every element.</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/plainas/matrix/blob/c15a51feb06cc0b02f69dc8da45e629e29f53449/src/matrix.cr#L198","source_link":"https://github.com/plainas/matrix/blob/c15a51feb06cc0b02f69dc8da45e629e29f53449/src/matrix.cr#L198","def":{"name":"-","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"map do |e|\n  -e\nend"}},{"id":"/(other:Matrix)-instance-method","html_id":"/(other:Matrix)-instance-method","name":"/","doc":"Performs division with another matrix.","summary":"<p>Performs division with another matrix.</p>","abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"Matrix"}],"args_string":"(other : Matrix)","source_link":"https://github.com/plainas/matrix/blob/c15a51feb06cc0b02f69dc8da45e629e29f53449/src/matrix.cr#L276","source_link":"https://github.com/plainas/matrix/blob/c15a51feb06cc0b02f69dc8da45e629e29f53449/src/matrix.cr#L276","def":{"name":"/","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"Matrix"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self * other.inverse"}},{"id":"/(other:T|Number)-instance-method","html_id":"/(other:T|Number)-instance-method","name":"/","doc":null,"summary":null,"abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"T | Number"}],"args_string":"(other : T | Number)","source_link":"https://github.com/plainas/matrix/blob/c15a51feb06cc0b02f69dc8da45e629e29f53449/src/matrix.cr#L20","source_link":"https://github.com/plainas/matrix/blob/c15a51feb06cc0b02f69dc8da45e629e29f53449/src/matrix.cr#L20","def":{"name":"/","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"T | Number"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"map do |e|\n  e / other\nend"}},{"id":"<<(other:T|Number)-instance-method","html_id":"&lt;&lt;(other:T|Number)-instance-method","name":"<<","doc":null,"summary":null,"abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"T | Number"}],"args_string":"(other : T | Number)","source_link":"https://github.com/plainas/matrix/blob/c15a51feb06cc0b02f69dc8da45e629e29f53449/src/matrix.cr#L20","source_link":"https://github.com/plainas/matrix/blob/c15a51feb06cc0b02f69dc8da45e629e29f53449/src/matrix.cr#L20","def":{"name":"<<","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"T | Number"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"map do |e|\n  e << other\nend"}},{"id":"==(other:Matrix)-instance-method","html_id":"==(other:Matrix)-instance-method","name":"==","doc":"Checks equality between self and another matrix.","summary":"<p>Checks equality between self and another matrix.</p>","abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"Matrix"}],"args_string":"(other : Matrix)","source_link":"https://github.com/plainas/matrix/blob/c15a51feb06cc0b02f69dc8da45e629e29f53449/src/matrix.cr#L188","source_link":"https://github.com/plainas/matrix/blob/c15a51feb06cc0b02f69dc8da45e629e29f53449/src/matrix.cr#L188","def":{"name":"==","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"Matrix"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if dimensions == other.dimensions\nelse\n  return false\nend\nsize.times do |i|\n  if (at(i)) == other[i]\n  else\n    return false\n  end\nend\ntrue\n"}},{"id":">>(other:T|Number)-instance-method","html_id":"&gt;&gt;(other:T|Number)-instance-method","name":">>","doc":null,"summary":null,"abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"T | Number"}],"args_string":"(other : T | Number)","source_link":"https://github.com/plainas/matrix/blob/c15a51feb06cc0b02f69dc8da45e629e29f53449/src/matrix.cr#L20","source_link":"https://github.com/plainas/matrix/blob/c15a51feb06cc0b02f69dc8da45e629e29f53449/src/matrix.cr#L20","def":{"name":">>","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"T | Number"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"map do |e|\n  e >> other\nend"}},{"id":"[](index:Int)-instance-method","html_id":"[](index:Int)-instance-method","name":"[]","doc":"Retrieves the element at the given linear index. Raises IndexError.","summary":"<p>Retrieves the element at the given linear index.</p>","abstract":false,"args":[{"name":"index","doc":null,"default_value":"","external_name":"index","restriction":"Int"}],"args_string":"(index : Int)","source_link":"https://github.com/plainas/matrix/blob/c15a51feb06cc0b02f69dc8da45e629e29f53449/src/matrix.cr#L134","source_link":"https://github.com/plainas/matrix/blob/c15a51feb06cc0b02f69dc8da45e629e29f53449/src/matrix.cr#L134","def":{"name":"[]","args":[{"name":"index","doc":null,"default_value":"","external_name":"index","restriction":"Int"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"at(index)"}},{"id":"[](row:Int,column:Int)-instance-method","html_id":"[](row:Int,column:Int)-instance-method","name":"[]","doc":"Retrieves the element at the given row and column indexes.\nRaises IndexError.","summary":"<p>Retrieves the element at the given row and column indexes.</p>","abstract":false,"args":[{"name":"row","doc":null,"default_value":"","external_name":"row","restriction":"Int"},{"name":"column","doc":null,"default_value":"","external_name":"column","restriction":"Int"}],"args_string":"(row : Int, column : Int)","source_link":"https://github.com/plainas/matrix/blob/c15a51feb06cc0b02f69dc8da45e629e29f53449/src/matrix.cr#L114","source_link":"https://github.com/plainas/matrix/blob/c15a51feb06cc0b02f69dc8da45e629e29f53449/src/matrix.cr#L114","def":{"name":"[]","args":[{"name":"row","doc":null,"default_value":"","external_name":"row","restriction":"Int"},{"name":"column","doc":null,"default_value":"","external_name":"column","restriction":"Int"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"at(row, column)"}},{"id":"[]=(row:Int,column:Int,value:T)-instance-method","html_id":"[]=(row:Int,column:Int,value:T)-instance-method","name":"[]=","doc":"Replaces the element at the given row and column with the given value.","summary":"<p>Replaces the element at the given row and column with the given value.</p>","abstract":false,"args":[{"name":"row","doc":null,"default_value":"","external_name":"row","restriction":"Int"},{"name":"column","doc":null,"default_value":"","external_name":"column","restriction":"Int"},{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"T"}],"args_string":"(row : Int, column : Int, value : T)","source_link":"https://github.com/plainas/matrix/blob/c15a51feb06cc0b02f69dc8da45e629e29f53449/src/matrix.cr#L125","source_link":"https://github.com/plainas/matrix/blob/c15a51feb06cc0b02f69dc8da45e629e29f53449/src/matrix.cr#L125","def":{"name":"[]=","args":[{"name":"row","doc":null,"default_value":"","external_name":"row","restriction":"Int"},{"name":"column","doc":null,"default_value":"","external_name":"column","restriction":"Int"},{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"T"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if row >= @rows || column >= @columns\n  raise(IndexError.new)\nend\nif row < 0\n  row = row + @rows\nend\nif column < 0\n  column = column + @columns\nend\nif 0 <= row && 0 <= column\nelse\n  raise(IndexError.new)\nend\n@buffer[column + (row * @columns)] = value\n"}},{"id":"[]=(index:Int,value:T)-instance-method","html_id":"[]=(index:Int,value:T)-instance-method","name":"[]=","doc":"Replaces the element at the given linear index with the given value.","summary":"<p>Replaces the element at the given linear index with the given value.</p>","abstract":false,"args":[{"name":"index","doc":null,"default_value":"","external_name":"index","restriction":"Int"},{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"T"}],"args_string":"(index : Int, value : T)","source_link":"https://github.com/plainas/matrix/blob/c15a51feb06cc0b02f69dc8da45e629e29f53449/src/matrix.cr#L145","source_link":"https://github.com/plainas/matrix/blob/c15a51feb06cc0b02f69dc8da45e629e29f53449/src/matrix.cr#L145","def":{"name":"[]=","args":[{"name":"index","doc":null,"default_value":"","external_name":"index","restriction":"Int"},{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"T"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if index >= size\n  raise(IndexError.new)\nend\nif index < 0\n  index = index + size\nend\nif index < 0\n  raise(IndexError.new)\nend\n@buffer[index] = value\n"}},{"id":"[]?(row:Int,column:Int)-instance-method","html_id":"[]?(row:Int,column:Int)-instance-method","name":"[]?","doc":"Retrieves the element at the given row and column indexes.\nReturns nil if out of bounds.","summary":"<p>Retrieves the element at the given row and column indexes.</p>","abstract":false,"args":[{"name":"row","doc":null,"default_value":"","external_name":"row","restriction":"Int"},{"name":"column","doc":null,"default_value":"","external_name":"column","restriction":"Int"}],"args_string":"(row : Int, column : Int)","source_link":"https://github.com/plainas/matrix/blob/c15a51feb06cc0b02f69dc8da45e629e29f53449/src/matrix.cr#L120","source_link":"https://github.com/plainas/matrix/blob/c15a51feb06cc0b02f69dc8da45e629e29f53449/src/matrix.cr#L120","def":{"name":"[]?","args":[{"name":"row","doc":null,"default_value":"","external_name":"row","restriction":"Int"},{"name":"column","doc":null,"default_value":"","external_name":"column","restriction":"Int"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"at(row, column) do\n  nil\nend"}},{"id":"[]?(index:Int)-instance-method","html_id":"[]?(index:Int)-instance-method","name":"[]?","doc":"Retrieves the element at the given linear index. Returns nil if out of\nbounds","summary":"<p>Retrieves the element at the given linear index.</p>","abstract":false,"args":[{"name":"index","doc":null,"default_value":"","external_name":"index","restriction":"Int"}],"args_string":"(index : Int)","source_link":"https://github.com/plainas/matrix/blob/c15a51feb06cc0b02f69dc8da45e629e29f53449/src/matrix.cr#L140","source_link":"https://github.com/plainas/matrix/blob/c15a51feb06cc0b02f69dc8da45e629e29f53449/src/matrix.cr#L140","def":{"name":"[]?","args":[{"name":"index","doc":null,"default_value":"","external_name":"index","restriction":"Int"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"at(index) do\n  nil\nend"}},{"id":"^(other:T|Number)-instance-method","html_id":"^(other:T|Number)-instance-method","name":"^","doc":null,"summary":null,"abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"T | Number"}],"args_string":"(other : T | Number)","source_link":"https://github.com/plainas/matrix/blob/c15a51feb06cc0b02f69dc8da45e629e29f53449/src/matrix.cr#L20","source_link":"https://github.com/plainas/matrix/blob/c15a51feb06cc0b02f69dc8da45e629e29f53449/src/matrix.cr#L20","def":{"name":"^","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"T | Number"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"map do |e|\n  e ^ other\nend"}},{"id":"at(row:Int,column:Int,&block)-instance-method","html_id":"at(row:Int,column:Int,&amp;block)-instance-method","name":"at","doc":"Retrieves the element at the given row and column indexes.\nYields if out of bounds.","summary":"<p>Retrieves the element at the given row and column indexes.</p>","abstract":false,"args":[{"name":"row","doc":null,"default_value":"","external_name":"row","restriction":"Int"},{"name":"column","doc":null,"default_value":"","external_name":"column","restriction":"Int"}],"args_string":"(row : Int, column : Int, &block)","source_link":"https://github.com/plainas/matrix/blob/c15a51feb06cc0b02f69dc8da45e629e29f53449/src/matrix.cr#L154","source_link":"https://github.com/plainas/matrix/blob/c15a51feb06cc0b02f69dc8da45e629e29f53449/src/matrix.cr#L154","def":{"name":"at","args":[{"name":"row","doc":null,"default_value":"","external_name":"row","restriction":"Int"},{"name":"column","doc":null,"default_value":"","external_name":"column","restriction":"Int"}],"double_splat":null,"splat_index":null,"yields":0,"block_arg":null,"return_type":"","visibility":"Public","body":"if column < 0\n  column = column + @columns\nend\nif row < 0\n  row = row + @rows\nend\nif ((row >= @rows || column >= @columns) || row < 0) || column < 0\n  yield\nelse\n  @buffer[column + (row * @columns)]\nend\n"}},{"id":"at(row:Int,column:Int)-instance-method","html_id":"at(row:Int,column:Int)-instance-method","name":"at","doc":"Retrieves the element at the given row and column indexes.\nRaises IndexError.","summary":"<p>Retrieves the element at the given row and column indexes.</p>","abstract":false,"args":[{"name":"row","doc":null,"default_value":"","external_name":"row","restriction":"Int"},{"name":"column","doc":null,"default_value":"","external_name":"column","restriction":"Int"}],"args_string":"(row : Int, column : Int)","source_link":"https://github.com/plainas/matrix/blob/c15a51feb06cc0b02f69dc8da45e629e29f53449/src/matrix.cr#L166","source_link":"https://github.com/plainas/matrix/blob/c15a51feb06cc0b02f69dc8da45e629e29f53449/src/matrix.cr#L166","def":{"name":"at","args":[{"name":"row","doc":null,"default_value":"","external_name":"row","restriction":"Int"},{"name":"column","doc":null,"default_value":"","external_name":"column","restriction":"Int"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"at(row, column) do\n  raise(IndexError.new)\nend"}},{"id":"at(index:Int,&block)-instance-method","html_id":"at(index:Int,&amp;block)-instance-method","name":"at","doc":"Retrieves the element at the given linear index.\nYields if out of bounds.","summary":"<p>Retrieves the element at the given linear index.</p>","abstract":false,"args":[{"name":"index","doc":null,"default_value":"","external_name":"index","restriction":"Int"}],"args_string":"(index : Int, &block)","source_link":"https://github.com/plainas/matrix/blob/c15a51feb06cc0b02f69dc8da45e629e29f53449/src/matrix.cr#L172","source_link":"https://github.com/plainas/matrix/blob/c15a51feb06cc0b02f69dc8da45e629e29f53449/src/matrix.cr#L172","def":{"name":"at","args":[{"name":"index","doc":null,"default_value":"","external_name":"index","restriction":"Int"}],"double_splat":null,"splat_index":null,"yields":0,"block_arg":null,"return_type":"","visibility":"Public","body":"if index < 0\n  index = index + size\nend\nif index >= size || index < 0\n  yield\nelse\n  @buffer[index]\nend\n"}},{"id":"at(index:Int)-instance-method","html_id":"at(index:Int)-instance-method","name":"at","doc":"Retrieves the element at the given linear index.\nRaises if out of bounds.","summary":"<p>Retrieves the element at the given linear index.</p>","abstract":false,"args":[{"name":"index","doc":null,"default_value":"","external_name":"index","restriction":"Int"}],"args_string":"(index : Int)","source_link":"https://github.com/plainas/matrix/blob/c15a51feb06cc0b02f69dc8da45e629e29f53449/src/matrix.cr#L183","source_link":"https://github.com/plainas/matrix/blob/c15a51feb06cc0b02f69dc8da45e629e29f53449/src/matrix.cr#L183","def":{"name":"at","args":[{"name":"index","doc":null,"default_value":"","external_name":"index","restriction":"Int"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"at(index) do\n  raise(IndexError.new)\nend"}},{"id":"clone-instance-method","html_id":"clone-instance-method","name":"clone","doc":"Creates an identical matrix.","summary":"<p>Creates an identical matrix.</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/plainas/matrix/blob/c15a51feb06cc0b02f69dc8da45e629e29f53449/src/matrix.cr#L792","source_link":"https://github.com/plainas/matrix/blob/c15a51feb06cc0b02f69dc8da45e629e29f53449/src/matrix.cr#L792","def":{"name":"clone","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Matrix.new(@rows, @columns) do |i|\n  (at(i)).clone\nend"}},{"id":"column(index:Int,&block)-instance-method","html_id":"column(index:Int,&amp;block)-instance-method","name":"column","doc":"Yields elements of the column at the given index.","summary":"<p>Yields elements of the column at the given index.</p>","abstract":false,"args":[{"name":"index","doc":null,"default_value":"","external_name":"index","restriction":"Int"}],"args_string":"(index : Int, &block)","source_link":"https://github.com/plainas/matrix/blob/c15a51feb06cc0b02f69dc8da45e629e29f53449/src/matrix.cr#L415","source_link":"https://github.com/plainas/matrix/blob/c15a51feb06cc0b02f69dc8da45e629e29f53449/src/matrix.cr#L415","def":{"name":"column","args":[{"name":"index","doc":null,"default_value":"","external_name":"index","restriction":"Int"}],"double_splat":null,"splat_index":null,"yields":1,"block_arg":null,"return_type":"","visibility":"Public","body":"if index >= @columns\n  raise(IndexError.new)\nend\nif index < 0\n  index = index + @columns\nend\nif index < 0\n  raise(IndexError.new)\nend\n@rows.times do |i|\n  yield at(i, index)\nend\nself\n"}},{"id":"column(column_index:Int)-instance-method","html_id":"column(column_index:Int)-instance-method","name":"column","doc":"Returns an iterator for the elements of the column at the given index.","summary":"<p>Returns an iterator for the elements of the column at the given index.</p>","abstract":false,"args":[{"name":"column_index","doc":null,"default_value":"","external_name":"column_index","restriction":"Int"}],"args_string":"(column_index : Int)","source_link":"https://github.com/plainas/matrix/blob/c15a51feb06cc0b02f69dc8da45e629e29f53449/src/matrix.cr#L407","source_link":"https://github.com/plainas/matrix/blob/c15a51feb06cc0b02f69dc8da45e629e29f53449/src/matrix.cr#L407","def":{"name":"column","args":[{"name":"column_index","doc":null,"default_value":"","external_name":"column_index","restriction":"Int"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if column_index >= @columns\n  raise(IndexError.new)\nend\nif column_index < 0\n  column_index = column_index + @columns\nend\nif column_index < 0\n  raise(IndexError.new)\nend\nColumnIterator.new(self, 0, column_index)\n"}},{"id":"column_count-instance-method","html_id":"column_count-instance-method","name":"column_count","doc":"The number of columns.","summary":"<p>The number of columns.</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/plainas/matrix/blob/c15a51feb06cc0b02f69dc8da45e629e29f53449/src/matrix.cr#L429","source_link":"https://github.com/plainas/matrix/blob/c15a51feb06cc0b02f69dc8da45e629e29f53449/src/matrix.cr#L429","def":{"name":"column_count","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@columns"}},{"id":"column_vectors-instance-method","html_id":"column_vectors-instance-method","name":"column_vectors","doc":"Returns an array of smaller matrices, each representing a column from self.","summary":"<p>Returns an array of smaller matrices, each representing a column from self.</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/plainas/matrix/blob/c15a51feb06cc0b02f69dc8da45e629e29f53449/src/matrix.cr#L535","source_link":"https://github.com/plainas/matrix/blob/c15a51feb06cc0b02f69dc8da45e629e29f53449/src/matrix.cr#L535","def":{"name":"column_vectors","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Array.new(@columns) do |i|\n  minor(0, @rows, i, 1)\nend"}},{"id":"columns-instance-method","html_id":"columns-instance-method","name":"columns","doc":"Returns an array of arrays that correspond to the columns of the matrix.","summary":"<p>Returns an array of arrays that correspond to the columns of the matrix.</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/plainas/matrix/blob/c15a51feb06cc0b02f69dc8da45e629e29f53449/src/matrix.cr#L424","source_link":"https://github.com/plainas/matrix/blob/c15a51feb06cc0b02f69dc8da45e629e29f53449/src/matrix.cr#L424","def":{"name":"columns","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Array.new(@columns) do |i|\n  (column(i)).to_a\nend"}},{"id":"cycle(which:Symbol=:all)-instance-method","html_id":"cycle(which:Symbol=:all)-instance-method","name":"cycle","doc":null,"summary":null,"abstract":false,"args":[{"name":"which","doc":null,"default_value":":all","external_name":"which","restriction":"Symbol"}],"args_string":"(which : Symbol = <span class=\"n\">:all</span>)","source_link":"https://github.com/plainas/matrix/blob/c15a51feb06cc0b02f69dc8da45e629e29f53449/src/matrix.cr#L341","source_link":"https://github.com/plainas/matrix/blob/c15a51feb06cc0b02f69dc8da45e629e29f53449/src/matrix.cr#L341","def":{"name":"cycle","args":[{"name":"which","doc":null,"default_value":":all","external_name":"which","restriction":"Symbol"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"(each(which)).cycle"}},{"id":"determinant-instance-method","html_id":"determinant-instance-method","name":"determinant","doc":"Returns the determinant of the matrix. Only useful for numeric matrices.","summary":"<p>Returns the determinant of the matrix.</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/plainas/matrix/blob/c15a51feb06cc0b02f69dc8da45e629e29f53449/src/matrix.cr#L570","source_link":"https://github.com/plainas/matrix/blob/c15a51feb06cc0b02f69dc8da45e629e29f53449/src/matrix.cr#L570","def":{"name":"determinant","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if square?\nelse\n  raise(DimensionMismatch.new)\nend\ncase @rows\nwhen 0\n  1\nwhen 1\n  at(0)\nwhen 2\n  ((at(0)) * (at(3))) - ((at(1)) * (at(2)))\nwhen 3\n  (((((((at(0)) * (at(4))) * (at(8))) - (((at(0)) * (at(5))) * (at(7)))) - (((at(1)) * (at(3))) * (at(8)))) + (((at(1)) * (at(5))) * (at(6)))) + (((at(2)) * (at(3))) * (at(7)))) - (((at(2)) * (at(4))) * (at(6)))\nwhen 4\n  ((((((((((((((((((((((((((at(0)) * (at(5))) * (at(10))) * (at(15))) - ((((at(0)) * (at(5))) * (at(11))) * (at(14)))) - ((((at(0)) * (at(6))) * (at(9))) * (at(15)))) + ((((at(0)) * (at(6))) * (at(11))) * (at(13)))) + ((((at(0)) * (at(7))) * (at(9))) * (at(14)))) - ((((at(0)) * (at(7))) * (at(10))) * (at(13)))) - ((((at(1)) * (at(4))) * (at(10))) * (at(15)))) + ((((at(1)) * (at(4))) * (at(11))) * (at(14)))) + ((((at(1)) * (at(6))) * (at(8))) * (at(15)))) - ((((at(1)) * (at(6))) * (at(11))) * (at(12)))) - ((((at(1)) * (at(7))) * (at(8))) * (at(14)))) + ((((at(1)) * (at(7))) * (at(10))) * (at(12)))) + ((((at(2)) * (at(4))) * (at(9))) * (at(15)))) - ((((at(2)) * (at(4))) * (at(11))) * (at(13)))) - ((((at(2)) * (at(5))) * (at(8))) * (at(15)))) + ((((at(2)) * (at(5))) * (at(11))) * (at(12)))) + ((((at(2)) * (at(7))) * (at(8))) * (at(13)))) - ((((at(2)) * (at(7))) * (at(9))) * (at(12)))) - ((((at(3)) * (at(4))) * (at(9))) * (at(14)))) + ((((at(3)) * (at(4))) * (at(10))) * (at(13)))) + ((((at(3)) * (at(5))) * (at(8))) * (at(14)))) - ((((at(3)) * (at(5))) * (at(10))) * (at(12)))) - ((((at(3)) * (at(6))) * (at(8))) * (at(13)))) + ((((at(3)) * (at(6))) * (at(9))) * (at(12)))\nelse\n  m = clone\n  last = @rows - 1\n  sign = 1\n  pivot = 1\n  @rows.times do |k|\n    previous_pivot = pivot\n    if (pivot = m[k, k]) == 0\n      switch = ((k + 1)...@rows).find(0) do |row|\n        m[row, k] != 0\n      end\n      m.swap_rows(switch, k)\n      pivot = m[k, k]\n      sign = -sign\n    end\n    (k + 1).upto(last) do |i|\n      (k + 1).upto(last) do |j|\n        m[i, j] = ((pivot * m[i, j]) - (m[i, k] * m[k, j])) / previous_pivot\n      end\n    end\n  end\n  sign * pivot\nend\n"}},{"id":"diagonal?-instance-method","html_id":"diagonal?-instance-method","name":"diagonal?","doc":"Returns true if all non-diagonal elements are 0.","summary":"<p>Returns true if all non-diagonal elements are 0.</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/plainas/matrix/blob/c15a51feb06cc0b02f69dc8da45e629e29f53449/src/matrix.cr#L444","source_link":"https://github.com/plainas/matrix/blob/c15a51feb06cc0b02f69dc8da45e629e29f53449/src/matrix.cr#L444","def":{"name":"diagonal?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if square?\nelse\n  raise(DimensionMismatch.new)\nend\neach(:off_diagonal) do |e|\n  if e == 0\n  else\n    return false\n  end\nend\ntrue\n"}},{"id":"dimensions-instance-method","html_id":"dimensions-instance-method","name":"dimensions","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/plainas/matrix/blob/c15a51feb06cc0b02f69dc8da45e629e29f53449/src/matrix.cr#L452","source_link":"https://github.com/plainas/matrix/blob/c15a51feb06cc0b02f69dc8da45e629e29f53449/src/matrix.cr#L452","def":{"name":"dimensions","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"{@rows, @columns}"}},{"id":"each(&block)-instance-method","html_id":"each(&amp;block)-instance-method","name":"each","doc":"Yields every element of the matrix linearly: First the elements of the first\nrow, then the elements of the second row, etc.","summary":"<p>Yields every element of the matrix linearly: First the elements of the first row, then the elements of the second row, etc.</p>","abstract":false,"args":[],"args_string":"(&block)","source_link":"https://github.com/plainas/matrix/blob/c15a51feb06cc0b02f69dc8da45e629e29f53449/src/matrix.cr#L282","source_link":"https://github.com/plainas/matrix/blob/c15a51feb06cc0b02f69dc8da45e629e29f53449/src/matrix.cr#L282","def":{"name":"each","args":[],"double_splat":null,"splat_index":null,"yields":1,"block_arg":null,"return_type":"","visibility":"Public","body":"size.times do |i|\n  yield at(i)\nend\nself\n"}},{"id":"each(which:Symbol,&block)-instance-method","html_id":"each(which:Symbol,&amp;block)-instance-method","name":"each","doc":"Like #each but with a Symbol directive that causes the method to skip\ncertain indices:\n  :all            -> equivalent to a simple #each (yields every element)\n  :diagonal       -> yields elements in the diagonal\n  :off_diagonal   -> yields elements not in the diagonal\n  :lower          -> yields elements at or below the diagonal\n  :strict_lower   -> yields elements below the diagonal\n  :upper          -> yields elements at or above the diagonal\n  :strict_upper   -> yields elements above the diagonal","summary":"<p>Like #each but with a Symbol directive that causes the method to skip certain indices:   :all            -> equivalent to a simple #each (yields every element)   :diagonal       -> yields elements in the diagonal   :off_diagonal   -> yields elements not in the diagonal   :lower          -> yields elements at or below the diagonal   :strict_lower   -> yields elements below the diagonal   :upper          -> yields elements at or above the diagonal   :strict_upper   -> yields elements above the diagonal</p>","abstract":false,"args":[{"name":"which","doc":null,"default_value":"","external_name":"which","restriction":"Symbol"}],"args_string":"(which : Symbol, &block)","source_link":"https://github.com/plainas/matrix/blob/c15a51feb06cc0b02f69dc8da45e629e29f53449/src/matrix.cr#L296","source_link":"https://github.com/plainas/matrix/blob/c15a51feb06cc0b02f69dc8da45e629e29f53449/src/matrix.cr#L296","def":{"name":"each","args":[{"name":"which","doc":null,"default_value":"","external_name":"which","restriction":"Symbol"}],"double_splat":null,"splat_index":null,"yields":1,"block_arg":null,"return_type":"","visibility":"Public","body":"each_with_index(which) do |e|\n  yield e\nend"}},{"id":"each(which:Symbol=:all)-instance-method","html_id":"each(which:Symbol=:all)-instance-method","name":"each","doc":null,"summary":null,"abstract":false,"args":[{"name":"which","doc":null,"default_value":":all","external_name":"which","restriction":"Symbol"}],"args_string":"(which : Symbol = <span class=\"n\">:all</span>)","source_link":"https://github.com/plainas/matrix/blob/c15a51feb06cc0b02f69dc8da45e629e29f53449/src/matrix.cr#L300","source_link":"https://github.com/plainas/matrix/blob/c15a51feb06cc0b02f69dc8da45e629e29f53449/src/matrix.cr#L300","def":{"name":"each","args":[{"name":"which","doc":null,"default_value":":all","external_name":"which","restriction":"Symbol"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"ItemIterator.new(self, directive: which)"}},{"id":"each_index(which:Symbol=:all)-instance-method","html_id":"each_index(which:Symbol=:all)-instance-method","name":"each_index","doc":null,"summary":null,"abstract":false,"args":[{"name":"which","doc":null,"default_value":":all","external_name":"which","restriction":"Symbol"}],"args_string":"(which : Symbol = <span class=\"n\">:all</span>)","source_link":"https://github.com/plainas/matrix/blob/c15a51feb06cc0b02f69dc8da45e629e29f53449/src/matrix.cr#L337","source_link":"https://github.com/plainas/matrix/blob/c15a51feb06cc0b02f69dc8da45e629e29f53449/src/matrix.cr#L337","def":{"name":"each_index","args":[{"name":"which","doc":null,"default_value":":all","external_name":"which","restriction":"Symbol"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"IndexIterator.new(self, directive: which)"}},{"id":"each_index(which:Symbol=:all,&block)-instance-method","html_id":"each_index(which:Symbol=:all,&amp;block)-instance-method","name":"each_index","doc":"Yields every row and column index.\nSee #each for the optional directives.","summary":"<p>Yields every row and column index.</p>","abstract":false,"args":[{"name":"which","doc":null,"default_value":":all","external_name":"which","restriction":"Symbol"}],"args_string":"(which : Symbol = <span class=\"n\">:all</span>, &block)","source_link":"https://github.com/plainas/matrix/blob/c15a51feb06cc0b02f69dc8da45e629e29f53449/src/matrix.cr#L333","source_link":"https://github.com/plainas/matrix/blob/c15a51feb06cc0b02f69dc8da45e629e29f53449/src/matrix.cr#L333","def":{"name":"each_index","args":[{"name":"which","doc":null,"default_value":":all","external_name":"which","restriction":"Symbol"}],"double_splat":null,"splat_index":null,"yields":2,"block_arg":null,"return_type":"","visibility":"Public","body":"each_with_index(which) do |e, r, c|\n  yield r, c\nend"}},{"id":"each_with_index(which:Symbol=:all,&block)-instance-method","html_id":"each_with_index(which:Symbol=:all,&amp;block)-instance-method","name":"each_with_index","doc":"Yields every element along with its row and column index.\nSee #each for the optional directives.","summary":"<p>Yields every element along with its row and column index.</p>","abstract":false,"args":[{"name":"which","doc":null,"default_value":":all","external_name":"which","restriction":"Symbol"}],"args_string":"(which : Symbol = <span class=\"n\">:all</span>, &block)","source_link":"https://github.com/plainas/matrix/blob/c15a51feb06cc0b02f69dc8da45e629e29f53449/src/matrix.cr#L306","source_link":"https://github.com/plainas/matrix/blob/c15a51feb06cc0b02f69dc8da45e629e29f53449/src/matrix.cr#L306","def":{"name":"each_with_index","args":[{"name":"which","doc":null,"default_value":":all","external_name":"which","restriction":"Symbol"}],"double_splat":null,"splat_index":null,"yields":3,"block_arg":null,"return_type":"","visibility":"Public","body":"r, c = 0, 0\neach do |e|\n  case which\n  when :all\n    yield e, r, c\n  when :diagonal\n    if r == c\n      yield e, r, c\n    end\n  when :off_diagonal\n    if r != c\n      yield e, r, c\n    end\n  when :lower\n    if r >= c\n      yield e, r, c\n    end\n  when :strict_lower\n    if r > c\n      yield e, r, c\n    end\n  when :upper\n    if r <= c\n      yield e, r, c\n    end\n  when :strict_upper\n    if r < c\n      yield e, r, c\n    end\n  else\n    raise(ArgumentError.new)\n  end\n  c = c + 1\n  if r == @rows\n    c = c + 1\n    r = 0\n  end\n  if c == @columns\n    r = r + 1\n    c = 0\n  end\nend\n"}},{"id":"empty?-instance-method","html_id":"empty?-instance-method","name":"empty?","doc":"Returns true if the matrix has either 0 rows or 0 columns.","summary":"<p>Returns true if the matrix has either 0 rows or 0 columns.</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/plainas/matrix/blob/c15a51feb06cc0b02f69dc8da45e629e29f53449/src/matrix.cr#L457","source_link":"https://github.com/plainas/matrix/blob/c15a51feb06cc0b02f69dc8da45e629e29f53449/src/matrix.cr#L457","def":{"name":"empty?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"(@columns == 0) || (@rows == 0)"}},{"id":"hash-instance-method","html_id":"hash-instance-method","name":"hash","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/plainas/matrix/blob/c15a51feb06cc0b02f69dc8da45e629e29f53449/src/matrix.cr#L798","source_link":"https://github.com/plainas/matrix/blob/c15a51feb06cc0b02f69dc8da45e629e29f53449/src/matrix.cr#L798","def":{"name":"hash","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"reduce((31 * @rows) * @columns) do |memo, e|\n  (31 * memo) + e.hash\nend"}},{"id":"index(value:T,which:Symbol=:all)-instance-method","html_id":"index(value:T,which:Symbol=:all)-instance-method","name":"index","doc":"Returns the row and column index of the first occurrence of \"value\" in\nthe matrix, nil otherwise.","summary":"<p>Returns the row and column index of the first occurrence of \"value\" in the matrix, nil otherwise.</p>","abstract":false,"args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"T"},{"name":"which","doc":null,"default_value":":all","external_name":"which","restriction":"Symbol"}],"args_string":"(value : T, which : Symbol = <span class=\"n\">:all</span>)","source_link":"https://github.com/plainas/matrix/blob/c15a51feb06cc0b02f69dc8da45e629e29f53449/src/matrix.cr#L366","source_link":"https://github.com/plainas/matrix/blob/c15a51feb06cc0b02f69dc8da45e629e29f53449/src/matrix.cr#L366","def":{"name":"index","args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"T"},{"name":"which","doc":null,"default_value":":all","external_name":"which","restriction":"Symbol"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"each_with_index(which) do |e, r, c|\n  if e == value\n    return {r, c}\n  end\nend\nnil\n"}},{"id":"index(&block:T,Int32,Int32,Int32->Bool)-instance-method","html_id":"index(&amp;block:T,Int32,Int32,Int32-&gt;Bool)-instance-method","name":"index","doc":"Returns the row and column index of the first occurrence of the block\nreturning true, nil otherwise","summary":"<p>Returns the row and column index of the first occurrence of the block returning true, nil otherwise</p>","abstract":false,"args":[],"args_string":"(&block : T, Int32, Int32, Int32 -> Bool)","source_link":"https://github.com/plainas/matrix/blob/c15a51feb06cc0b02f69dc8da45e629e29f53449/src/matrix.cr#L375","source_link":"https://github.com/plainas/matrix/blob/c15a51feb06cc0b02f69dc8da45e629e29f53449/src/matrix.cr#L375","def":{"name":"index","args":[],"double_splat":null,"splat_index":null,"yields":4,"block_arg":{"name":"block","doc":null,"default_value":"","external_name":"block","restriction":"(T, Int32, Int32, Int32 -> Bool)"},"return_type":"","visibility":"Public","body":"i = 0\neach_with_index do |e, r, c|\n  if yield e, i, r, c\n    return {r, c}\n  end\n  i = i + 1\nend\nnil\n"}},{"id":"inspect(io:IO)-instance-method","html_id":"inspect(io:IO)-instance-method","name":"inspect","doc":null,"summary":null,"abstract":false,"args":[{"name":"io","doc":null,"default_value":"","external_name":"io","restriction":"IO"}],"args_string":"(io : IO)","source_link":"https://github.com/plainas/matrix/blob/c15a51feb06cc0b02f69dc8da45e629e29f53449/src/matrix.cr#L851","source_link":"https://github.com/plainas/matrix/blob/c15a51feb06cc0b02f69dc8da45e629e29f53449/src/matrix.cr#L851","def":{"name":"inspect","args":[{"name":"io","doc":null,"default_value":"","external_name":"io","restriction":"IO"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"io << \"Matrix[\"\n@rows.times do |t|\n  io << '['\n  i = 0\n  row(t) do |e|\n    e.inspect(io)\n    if i == (@columns - 1)\n    else\n      io << \", \"\n    end\n    i = i + 1\n  end\n  io << ']'\n  if t == (@rows - 1)\n  else\n    (io << ',') << ' '\n  end\nend\nio << ']'\n"}},{"id":"inverse-instance-method","html_id":"inverse-instance-method","name":"inverse","doc":"Returns the inverse of the matrix. Only useful for numeric matrices.","summary":"<p>Returns the inverse of the matrix.</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/plainas/matrix/blob/c15a51feb06cc0b02f69dc8da45e629e29f53449/src/matrix.cr#L622","source_link":"https://github.com/plainas/matrix/blob/c15a51feb06cc0b02f69dc8da45e629e29f53449/src/matrix.cr#L622","def":{"name":"inverse","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if square?\nelse\n  raise(DimensionMismatch.new)\nend\nlast = @rows - 1\na = Matrix.new(@rows, @columns) do |i|\n  (at(i)).to_f\nend\nm = Matrix.new(@rows, @columns) do |i, r, c|\n  r == c ? 1.0 : 0.0\nend\n0.upto(last) do |k|\n  i = k\n  akk = a[k, k].abs\n  (k + 1).upto(last) do |j|\n    v = a[j, k].abs\n    if v > akk\n      i = j\n      akk = v\n    end\n  end\n  if akk == 0\n    raise(NotRegular.new)\n  end\n  if i != k\n    a.swap_rows(i, k)\n    m.swap_rows(i, k)\n  end\n  akk = a[k, k]\n  0.upto(last) do |ii|\n    if ii == k\n      next\n    end\n    q = a[ii, k] / akk\n    a[ii, k] = 0.0\n    (k + 1).upto(last) do |j|\n      __temp_20 = ii\n      __temp_21 = j\n      a[__temp_20, __temp_21] = a[__temp_20, __temp_21] - (a[k, j] * q)\n    end\n    0.upto(last) do |j|\n      __temp_23 = ii\n      __temp_24 = j\n      m[__temp_23, __temp_24] = m[__temp_23, __temp_24] - (m[k, j] * q)\n    end\n  end\n  (k + 1).upto(last) do |j|\n    a[k, j] = a[k, j] / akk\n  end\n  0.upto(last) do |j|\n    m[k, j] = m[k, j] / akk\n  end\nend\nm\n"}},{"id":"lower_triangular?-instance-method","html_id":"lower_triangular?-instance-method","name":"lower_triangular?","doc":"Returns true if the matrix is a lower triangular matrix.","summary":"<p>Returns true if the matrix is a lower triangular matrix.</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/plainas/matrix/blob/c15a51feb06cc0b02f69dc8da45e629e29f53449/src/matrix.cr#L462","source_link":"https://github.com/plainas/matrix/blob/c15a51feb06cc0b02f69dc8da45e629e29f53449/src/matrix.cr#L462","def":{"name":"lower_triangular?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if square?\nelse\n  raise(DimensionMismatch.new)\nend\neach(:strict_upper) do |e|\n  if e == 0\n  else\n    return false\n  end\nend\ntrue\n"}},{"id":"map(&block)-instance-method","html_id":"map(&amp;block)-instance-method","name":"map","doc":"Returns a new matrix with the return values of the block.\nYields the element and its linear, row and column indices in that order.","summary":"<p>Returns a new matrix with the return values of the block.</p>","abstract":false,"args":[],"args_string":"(&block)","source_link":"https://github.com/plainas/matrix/blob/c15a51feb06cc0b02f69dc8da45e629e29f53449/src/matrix.cr#L347","source_link":"https://github.com/plainas/matrix/blob/c15a51feb06cc0b02f69dc8da45e629e29f53449/src/matrix.cr#L347","def":{"name":"map","args":[],"double_splat":null,"splat_index":null,"yields":4,"block_arg":null,"return_type":"","visibility":"Public","body":"Matrix.new(@rows, @columns) do |i, r, c|\n  yield at(i), i, r, c\nend"}},{"id":"map!(&block:T,Int32,Int32,Int32->_)-instance-method","html_id":"map!(&amp;block:T,Int32,Int32,Int32-&gt;_)-instance-method","name":"map!","doc":"Changes the values of the matrix according to the return values of the\nblock.\nYields the element and its linear, row and column indices in that order.","summary":"<p>Changes the values of the matrix according to the return values of the block.</p>","abstract":false,"args":[],"args_string":"(&block : T, Int32, Int32, Int32 -> _)","source_link":"https://github.com/plainas/matrix/blob/c15a51feb06cc0b02f69dc8da45e629e29f53449/src/matrix.cr#L356","source_link":"https://github.com/plainas/matrix/blob/c15a51feb06cc0b02f69dc8da45e629e29f53449/src/matrix.cr#L356","def":{"name":"map!","args":[],"double_splat":null,"splat_index":null,"yields":4,"block_arg":{"name":"block","doc":null,"default_value":"","external_name":"block","restriction":"(T, Int32, Int32, Int32 -> _)"},"return_type":"","visibility":"Public","body":"i = 0\neach_with_index do |e, r, c|\n  self[i] = yield e, i, r, c\n  i = i + 1\nend\n"}},{"id":"minor(start_row:Int,rows:Int,start_col:Int,columns:Int)-instance-method","html_id":"minor(start_row:Int,rows:Int,start_col:Int,columns:Int)-instance-method","name":"minor","doc":"Returns a subsection of the matrix.","summary":"<p>Returns a subsection of the matrix.</p>","abstract":false,"args":[{"name":"start_row","doc":null,"default_value":"","external_name":"start_row","restriction":"Int"},{"name":"rows","doc":null,"default_value":"","external_name":"rows","restriction":"Int"},{"name":"start_col","doc":null,"default_value":"","external_name":"start_col","restriction":"Int"},{"name":"columns","doc":null,"default_value":"","external_name":"columns","restriction":"Int"}],"args_string":"(start_row : Int, rows : Int, start_col : Int, columns : Int)","source_link":"https://github.com/plainas/matrix/blob/c15a51feb06cc0b02f69dc8da45e629e29f53449/src/matrix.cr#L540","source_link":"https://github.com/plainas/matrix/blob/c15a51feb06cc0b02f69dc8da45e629e29f53449/src/matrix.cr#L540","def":{"name":"minor","args":[{"name":"start_row","doc":null,"default_value":"","external_name":"start_row","restriction":"Int"},{"name":"rows","doc":null,"default_value":"","external_name":"rows","restriction":"Int"},{"name":"start_col","doc":null,"default_value":"","external_name":"start_col","restriction":"Int"},{"name":"columns","doc":null,"default_value":"","external_name":"columns","restriction":"Int"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if rows < 0 || columns < 0\n  raise(DimensionMismatch.new)\nend\nif (start_row + rows) > @rows\n  raise(IndexError.new)\nend\nif (start_col + columns) > @columns\n  raise(IndexError.new)\nend\nif start_row < 0\n  start_row = start_row + @rows\nend\nif start_col < 0\n  start_col = start_col + @columns\nend\nif start_row < 0 || start_col < 0\n  raise(IndexError.new)\nend\n(Matrix(T).new(rows, columns)).tap do |m|\n  m.each_index do |r, c|\n    min_r = ((start_row - r) + rows) - 1\n    min_c = ((start_col - c) + columns) - 1\n    i = -1 - ((c + (r * columns)) - (rows * columns))\n    m[i] = at(min_r, min_c)\n  end\nend\n"}},{"id":"minor(row_range:Range(Int,Int),col_range:Range(Int,Int))-instance-method","html_id":"minor(row_range:Range(Int,Int),col_range:Range(Int,Int))-instance-method","name":"minor","doc":"Returns a subsection of the matrix.","summary":"<p>Returns a subsection of the matrix.</p>","abstract":false,"args":[{"name":"row_range","doc":null,"default_value":"","external_name":"row_range","restriction":"Range(Int, Int)"},{"name":"col_range","doc":null,"default_value":"","external_name":"col_range","restriction":"Range(Int, Int)"}],"args_string":"(row_range : Range(Int, Int), col_range : Range(Int, Int))","source_link":"https://github.com/plainas/matrix/blob/c15a51feb06cc0b02f69dc8da45e629e29f53449/src/matrix.cr#L561","source_link":"https://github.com/plainas/matrix/blob/c15a51feb06cc0b02f69dc8da45e629e29f53449/src/matrix.cr#L561","def":{"name":"minor","args":[{"name":"row_range","doc":null,"default_value":"","external_name":"row_range","restriction":"Range(Int, Int)"},{"name":"col_range","doc":null,"default_value":"","external_name":"col_range","restriction":"Range(Int, Int)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"start_row, rows = row_range.begin, row_range.end\nstart_col, columns = col_range.begin, col_range.end\nif row_range.excludes_end?\nelse\n  rows = rows + 1\nend\nif col_range.excludes_end?\nelse\n  columns = columns + 1\nend\nminor(start_row, rows, start_col, columns)\n"}},{"id":"permutation?-instance-method","html_id":"permutation?-instance-method","name":"permutation?","doc":"Returns true if the matrix is a permutation matrix.","summary":"<p>Returns true if the matrix is a permutation matrix.</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/plainas/matrix/blob/c15a51feb06cc0b02f69dc8da45e629e29f53449/src/matrix.cr#L480","source_link":"https://github.com/plainas/matrix/blob/c15a51feb06cc0b02f69dc8da45e629e29f53449/src/matrix.cr#L480","def":{"name":"permutation?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if square?\nelse\n  raise(DimensionMismatch.new)\nend\n@rows.times do |i|\n  found = 0\n  row(i) do |e|\n    case e\n    when 0\n      next\n    when 1\n      found = found + 1\n    else\n      return false\n    end\n  end\n  if found == 1\n  else\n    return false\n  end\n  found = 0\n  column(i) do |e|\n    case e\n    when 0\n      next\n    when 1\n      found = found + 1\n    else\n      return false\n    end\n  end\n  if found == 1\n  else\n    return false\n  end\nend\ntrue\n"}},{"id":"rank-instance-method","html_id":"rank-instance-method","name":"rank","doc":"Returns the rank of the matrix. Only useful for numeric matrices.","summary":"<p>Returns the rank of the matrix.</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/plainas/matrix/blob/c15a51feb06cc0b02f69dc8da45e629e29f53449/src/matrix.cr#L660","source_link":"https://github.com/plainas/matrix/blob/c15a51feb06cc0b02f69dc8da45e629e29f53449/src/matrix.cr#L660","def":{"name":"rank","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"m = clone\npivot_row = 0\nprev_piv = 1\n0.upto(@columns - 1) do |k|\n  switch_row = (pivot_row...@rows).find do |row|\n    m[row, k] != 0\n  end\n  if switch_row\n    if pivot_row == switch_row\n    else\n      m.swap_rows(switch_row, pivot_row)\n    end\n    pivot = m[pivot_row, k]\n    (pivot_row + 1).upto(@rows - 1) do |i|\n      (k + 1).upto(@columns - 1) do |j|\n        m[i, j] = ((pivot * m[i, j]) - (m[i, k] * m[pivot_row, j])) / prev_piv\n      end\n    end\n    pivot_row = pivot_row + 1\n    prev_piv = pivot\n  end\nend\npivot_row\n"}},{"id":"regular?-instance-method","html_id":"regular?-instance-method","name":"regular?","doc":"Returns true if the matrix is regular.","summary":"<p>Returns true if the matrix is regular.</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/plainas/matrix/blob/c15a51feb06cc0b02f69dc8da45e629e29f53449/src/matrix.cr#L506","source_link":"https://github.com/plainas/matrix/blob/c15a51feb06cc0b02f69dc8da45e629e29f53449/src/matrix.cr#L506","def":{"name":"regular?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"!singular?"}},{"id":"reverse-instance-method","html_id":"reverse-instance-method","name":"reverse","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/plainas/matrix/blob/c15a51feb06cc0b02f69dc8da45e629e29f53449/src/matrix.cr#L730","source_link":"https://github.com/plainas/matrix/blob/c15a51feb06cc0b02f69dc8da45e629e29f53449/src/matrix.cr#L730","def":{"name":"reverse","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"clone.reverse!"}},{"id":"reverse!-instance-method","html_id":"reverse!-instance-method","name":"reverse!","doc":"Reverses the order of the matrix.","summary":"<p>Reverses the order of the matrix.</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/plainas/matrix/blob/c15a51feb06cc0b02f69dc8da45e629e29f53449/src/matrix.cr#L719","source_link":"https://github.com/plainas/matrix/blob/c15a51feb06cc0b02f69dc8da45e629e29f53449/src/matrix.cr#L719","def":{"name":"reverse!","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"i = 0\nj = size - 1\nwhile i < j\n  @buffer.swap(i, j)\n  i = i + 1\n  j = j - 1\nend\nself\n"}},{"id":"row(row_index:Int)-instance-method","html_id":"row(row_index:Int)-instance-method","name":"row","doc":"Returns an iterator for the elements of the row at the given index.","summary":"<p>Returns an iterator for the elements of the row at the given index.</p>","abstract":false,"args":[{"name":"row_index","doc":null,"default_value":"","external_name":"row_index","restriction":"Int"}],"args_string":"(row_index : Int)","source_link":"https://github.com/plainas/matrix/blob/c15a51feb06cc0b02f69dc8da45e629e29f53449/src/matrix.cr#L385","source_link":"https://github.com/plainas/matrix/blob/c15a51feb06cc0b02f69dc8da45e629e29f53449/src/matrix.cr#L385","def":{"name":"row","args":[{"name":"row_index","doc":null,"default_value":"","external_name":"row_index","restriction":"Int"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if row_index >= @rows\n  raise(IndexError.new)\nend\nif row_index < 0\n  row_index = row_index + @rows\nend\nif row_index < 0\n  raise(IndexError.new)\nend\nRowIterator.new(self, row_index)\n"}},{"id":"row(index:Int,&block)-instance-method","html_id":"row(index:Int,&amp;block)-instance-method","name":"row","doc":"Yields elements of the row at the given index.","summary":"<p>Yields elements of the row at the given index.</p>","abstract":false,"args":[{"name":"index","doc":null,"default_value":"","external_name":"index","restriction":"Int"}],"args_string":"(index : Int, &block)","source_link":"https://github.com/plainas/matrix/blob/c15a51feb06cc0b02f69dc8da45e629e29f53449/src/matrix.cr#L393","source_link":"https://github.com/plainas/matrix/blob/c15a51feb06cc0b02f69dc8da45e629e29f53449/src/matrix.cr#L393","def":{"name":"row","args":[{"name":"index","doc":null,"default_value":"","external_name":"index","restriction":"Int"}],"double_splat":null,"splat_index":null,"yields":1,"block_arg":null,"return_type":"","visibility":"Public","body":"if index >= @rows\n  raise(IndexError.new)\nend\nif index < 0\n  index = index + @rows\nend\nif index < 0\n  raise(IndexError.new)\nend\n@columns.times do |i|\n  yield at(index, i)\nend\nself\n"}},{"id":"row_count-instance-method","html_id":"row_count-instance-method","name":"row_count","doc":"The number of rows.","summary":"<p>The number of rows.</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/plainas/matrix/blob/c15a51feb06cc0b02f69dc8da45e629e29f53449/src/matrix.cr#L434","source_link":"https://github.com/plainas/matrix/blob/c15a51feb06cc0b02f69dc8da45e629e29f53449/src/matrix.cr#L434","def":{"name":"row_count","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@rows"}},{"id":"row_vectors-instance-method","html_id":"row_vectors-instance-method","name":"row_vectors","doc":"Returns an array of smaller matrices, each representing a row from self.","summary":"<p>Returns an array of smaller matrices, each representing a row from self.</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/plainas/matrix/blob/c15a51feb06cc0b02f69dc8da45e629e29f53449/src/matrix.cr#L530","source_link":"https://github.com/plainas/matrix/blob/c15a51feb06cc0b02f69dc8da45e629e29f53449/src/matrix.cr#L530","def":{"name":"row_vectors","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Array.new(@rows) do |i|\n  minor(i, 1, 0, @columns)\nend"}},{"id":"rows-instance-method","html_id":"rows-instance-method","name":"rows","doc":"Returns an array of arrays that correspond to the rows of the matrix.","summary":"<p>Returns an array of arrays that correspond to the rows of the matrix.</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/plainas/matrix/blob/c15a51feb06cc0b02f69dc8da45e629e29f53449/src/matrix.cr#L402","source_link":"https://github.com/plainas/matrix/blob/c15a51feb06cc0b02f69dc8da45e629e29f53449/src/matrix.cr#L402","def":{"name":"rows","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Array.new(@rows) do |i|\n  (row(i)).to_a\nend"}},{"id":"shuffle-instance-method","html_id":"shuffle-instance-method","name":"shuffle","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/plainas/matrix/blob/c15a51feb06cc0b02f69dc8da45e629e29f53449/src/matrix.cr#L740","source_link":"https://github.com/plainas/matrix/blob/c15a51feb06cc0b02f69dc8da45e629e29f53449/src/matrix.cr#L740","def":{"name":"shuffle","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"clone.shuffle!"}},{"id":"shuffle!-instance-method","html_id":"shuffle!-instance-method","name":"shuffle!","doc":"Shuffles the elements of the matrix.","summary":"<p>Shuffles the elements of the matrix.</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/plainas/matrix/blob/c15a51feb06cc0b02f69dc8da45e629e29f53449/src/matrix.cr#L735","source_link":"https://github.com/plainas/matrix/blob/c15a51feb06cc0b02f69dc8da45e629e29f53449/src/matrix.cr#L735","def":{"name":"shuffle!","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@buffer.shuffle!(size)\nself\n"}},{"id":"shuffle_columns-instance-method","html_id":"shuffle_columns-instance-method","name":"shuffle_columns","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/plainas/matrix/blob/c15a51feb06cc0b02f69dc8da45e629e29f53449/src/matrix.cr#L763","source_link":"https://github.com/plainas/matrix/blob/c15a51feb06cc0b02f69dc8da45e629e29f53449/src/matrix.cr#L763","def":{"name":"shuffle_columns","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"clone.shuffle_columns!"}},{"id":"shuffle_columns!-instance-method","html_id":"shuffle_columns!-instance-method","name":"shuffle_columns!","doc":"Shuffles the elements of each column.","summary":"<p>Shuffles the elements of each column.</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/plainas/matrix/blob/c15a51feb06cc0b02f69dc8da45e629e29f53449/src/matrix.cr#L757","source_link":"https://github.com/plainas/matrix/blob/c15a51feb06cc0b02f69dc8da45e629e29f53449/src/matrix.cr#L757","def":{"name":"shuffle_columns!","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"transpose!\nshuffle_rows!\ntranspose!\n"}},{"id":"shuffle_rows-instance-method","html_id":"shuffle_rows-instance-method","name":"shuffle_rows","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/plainas/matrix/blob/c15a51feb06cc0b02f69dc8da45e629e29f53449/src/matrix.cr#L752","source_link":"https://github.com/plainas/matrix/blob/c15a51feb06cc0b02f69dc8da45e629e29f53449/src/matrix.cr#L752","def":{"name":"shuffle_rows","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"clone.shuffle_rows!"}},{"id":"shuffle_rows!-instance-method","html_id":"shuffle_rows!-instance-method","name":"shuffle_rows!","doc":"Shuffles the elements of each row.","summary":"<p>Shuffles the elements of each row.</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/plainas/matrix/blob/c15a51feb06cc0b02f69dc8da45e629e29f53449/src/matrix.cr#L745","source_link":"https://github.com/plainas/matrix/blob/c15a51feb06cc0b02f69dc8da45e629e29f53449/src/matrix.cr#L745","def":{"name":"shuffle_rows!","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@rows.times do |i|\n  (@buffer + (i * @rows)).shuffle!(@columns)\nend\nself\n"}},{"id":"singular?-instance-method","html_id":"singular?-instance-method","name":"singular?","doc":"Returns true if the matrix is singular.","summary":"<p>Returns true if the matrix is singular.</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/plainas/matrix/blob/c15a51feb06cc0b02f69dc8da45e629e29f53449/src/matrix.cr#L511","source_link":"https://github.com/plainas/matrix/blob/c15a51feb06cc0b02f69dc8da45e629e29f53449/src/matrix.cr#L511","def":{"name":"singular?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"determinant == 0"}},{"id":"size-instance-method","html_id":"size-instance-method","name":"size","doc":"The total number of elements.","summary":"<p>The total number of elements.</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/plainas/matrix/blob/c15a51feb06cc0b02f69dc8da45e629e29f53449/src/matrix.cr#L439","source_link":"https://github.com/plainas/matrix/blob/c15a51feb06cc0b02f69dc8da45e629e29f53449/src/matrix.cr#L439","def":{"name":"size","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@rows * @columns"}},{"id":"square?-instance-method","html_id":"square?-instance-method","name":"square?","doc":"Returns true if the number of rows equals the number of columns.","summary":"<p>Returns true if the number of rows equals the number of columns.</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/plainas/matrix/blob/c15a51feb06cc0b02f69dc8da45e629e29f53449/src/matrix.cr#L516","source_link":"https://github.com/plainas/matrix/blob/c15a51feb06cc0b02f69dc8da45e629e29f53449/src/matrix.cr#L516","def":{"name":"square?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@rows == @columns"}},{"id":"swap_columns(col_1:Int,col_2:Int)-instance-method","html_id":"swap_columns(col_1:Int,col_2:Int)-instance-method","name":"swap_columns","doc":"Swaps two columns.","summary":"<p>Swaps two columns.</p>","abstract":false,"args":[{"name":"col_1","doc":null,"default_value":"","external_name":"col_1","restriction":"Int"},{"name":"col_2","doc":null,"default_value":"","external_name":"col_2","restriction":"Int"}],"args_string":"(col_1 : Int, col_2 : Int)","source_link":"https://github.com/plainas/matrix/blob/c15a51feb06cc0b02f69dc8da45e629e29f53449/src/matrix.cr#L780","source_link":"https://github.com/plainas/matrix/blob/c15a51feb06cc0b02f69dc8da45e629e29f53449/src/matrix.cr#L780","def":{"name":"swap_columns","args":[{"name":"col_1","doc":null,"default_value":"","external_name":"col_1","restriction":"Int"},{"name":"col_2","doc":null,"default_value":"","external_name":"col_2","restriction":"Int"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if col_1 >= @columns || col_2 >= @columns\n  raise(IndexError.new)\nend\nif col_1 < 0\n  col_1 = col_1 + @columns\nend\nif col_2 < 0\n  col_2 = col_2 + @columns\nend\nif col_1 < 0 || col_2 < 0\n  aise(IndexError.new)\nend\n@rows.times do |i|\n  self[i, col_1], self[i, col_2] = at(i, col_2), at(i, col_1)\nend\nself\n"}},{"id":"swap_rows(row_1:Int,row_2:Int)-instance-method","html_id":"swap_rows(row_1:Int,row_2:Int)-instance-method","name":"swap_rows","doc":"Swaps two rows.","summary":"<p>Swaps two rows.</p>","abstract":false,"args":[{"name":"row_1","doc":null,"default_value":"","external_name":"row_1","restriction":"Int"},{"name":"row_2","doc":null,"default_value":"","external_name":"row_2","restriction":"Int"}],"args_string":"(row_1 : Int, row_2 : Int)","source_link":"https://github.com/plainas/matrix/blob/c15a51feb06cc0b02f69dc8da45e629e29f53449/src/matrix.cr#L768","source_link":"https://github.com/plainas/matrix/blob/c15a51feb06cc0b02f69dc8da45e629e29f53449/src/matrix.cr#L768","def":{"name":"swap_rows","args":[{"name":"row_1","doc":null,"default_value":"","external_name":"row_1","restriction":"Int"},{"name":"row_2","doc":null,"default_value":"","external_name":"row_2","restriction":"Int"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if row_1 >= @rows || row_2 >= @rows\n  raise(IndexError.new)\nend\nif row_1 < 0\n  row_1 = row_1 + @rows\nend\nif row_2 < 0\n  row_2 = row_2 + @rows\nend\nif row_1 < 0 || row_2 < 0\n  raise(IndexError.new)\nend\n@columns.times do |i|\n  self[row_1, i], self[row_2, i] = at(row_2, i), at(row_1, i)\nend\nself\n"}},{"id":"symmetric?-instance-method","html_id":"symmetric?-instance-method","name":"symmetric?","doc":"Returns true if the matrix is symmetric.","summary":"<p>Returns true if the matrix is symmetric.</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/plainas/matrix/blob/c15a51feb06cc0b02f69dc8da45e629e29f53449/src/matrix.cr#L521","source_link":"https://github.com/plainas/matrix/blob/c15a51feb06cc0b02f69dc8da45e629e29f53449/src/matrix.cr#L521","def":{"name":"symmetric?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if square?\nelse\n  raise(DimensionMismatch.new)\nend\neach_with_index(:strict_upper) do |e, r, c|\n  if e == (at(c, r))\n  else\n    return false\n  end\nend\ntrue\n"}},{"id":"to_a-instance-method","html_id":"to_a-instance-method","name":"to_a","doc":"Returns an array of every element in the matrix.","summary":"<p>Returns an array of every element in the matrix.</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/plainas/matrix/blob/c15a51feb06cc0b02f69dc8da45e629e29f53449/src/matrix.cr#L805","source_link":"https://github.com/plainas/matrix/blob/c15a51feb06cc0b02f69dc8da45e629e29f53449/src/matrix.cr#L805","def":{"name":"to_a","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Array.new(size) do |i|\n  at(i)\nend"}},{"id":"to_h-instance-method","html_id":"to_h-instance-method","name":"to_h","doc":"Returns a hash: {row_index, column_index} => element","summary":"<p>Returns a hash: {row_index, column_index} => element</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/plainas/matrix/blob/c15a51feb06cc0b02f69dc8da45e629e29f53449/src/matrix.cr#L810","source_link":"https://github.com/plainas/matrix/blob/c15a51feb06cc0b02f69dc8da45e629e29f53449/src/matrix.cr#L810","def":{"name":"to_h","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"hash = {} of ::Tuple(Int32, Int32) => T\neach_with_index do |e, r, c|\n  hash[{r, c}] = e\nend\nhash\n"}},{"id":"to_s(io:IO)-instance-method","html_id":"to_s(io:IO)-instance-method","name":"to_s","doc":"Displays the matrix in a more readable form.","summary":"<p>Displays the matrix in a more readable form.</p>","abstract":false,"args":[{"name":"io","doc":null,"default_value":"","external_name":"io","restriction":"IO"}],"args_string":"(io : IO)","source_link":"https://github.com/plainas/matrix/blob/c15a51feb06cc0b02f69dc8da45e629e29f53449/src/matrix.cr#L819","source_link":"https://github.com/plainas/matrix/blob/c15a51feb06cc0b02f69dc8da45e629e29f53449/src/matrix.cr#L819","def":{"name":"to_s","args":[{"name":"io","doc":null,"default_value":"","external_name":"io","restriction":"IO"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if @rows == 1\n  io << '['\n  each_with_index do |e, r, c|\n    e.inspect(io)\n    if c == (@columns - 1)\n    else\n      io << ' '\n    end\n  end\n  io << ']'\nelse\n  max_size = max_of do |__arg0|\n    __arg0.inspect.size\n  end\n  io << '┌'\n  corner = true\n  @rows.times do |t|\n    if corner || (t == (@rows - 1))\n    else\n      io << '│'\n    end\n    if t == (@rows - 1)\n      io << '└'\n    end\n    i = 0\n    row(t) do |e|\n      size = e.inspect.size\n      (max_size - size).times do\n        io << ' '\n      end\n      e.inspect(io)\n      if i == (@columns - 1)\n      else\n        io << ' '\n      end\n      if ((i == (@columns - 1)) && (!corner)) && (t != (@rows - 1))\n        io << '│'\n      end\n      i = i + 1\n    end\n    if t == 0\n      io << '┐'\n    end\n    if t == (@rows - 1)\n      io << '┘'\n    end\n    if t == (@rows - 1)\n    else\n      io << '\\n'\n    end\n    corner = false\n  end\nend"}},{"id":"trace-instance-method","html_id":"trace-instance-method","name":"trace","doc":"Returns the sum of the diagonal elements. Only useful for numeric matrices.","summary":"<p>Returns the sum of the diagonal elements.</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/plainas/matrix/blob/c15a51feb06cc0b02f69dc8da45e629e29f53449/src/matrix.cr#L686","source_link":"https://github.com/plainas/matrix/blob/c15a51feb06cc0b02f69dc8da45e629e29f53449/src/matrix.cr#L686","def":{"name":"trace","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if square?\nelse\n  raise(DimensionMismatch.new)\nend\n(0...@columns).reduce(0) do |memo, i|\n  memo + (at(i, i))\nend\n"}},{"id":"transpose-instance-method","html_id":"transpose-instance-method","name":"transpose","doc":"Changes the rows into columns and vice versa.","summary":"<p>Changes the rows into columns and vice versa.</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/plainas/matrix/blob/c15a51feb06cc0b02f69dc8da45e629e29f53449/src/matrix.cr#L694","source_link":"https://github.com/plainas/matrix/blob/c15a51feb06cc0b02f69dc8da45e629e29f53449/src/matrix.cr#L694","def":{"name":"transpose","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"(Matrix(T).new(@columns, @rows)).tap do |m|\n  first = 0\n  while first <= ((@columns * @rows) - 1)\n    succ = first\n    i = 0\n    while !succ <= first\n      i = i + 1\n      succ = ((succ % @rows) * @columns) + (succ / @rows)\n    end\n    if (i == 1) || succ < first\n    else\n      temp = at(succ = first)\n      loop do\n        i = ((succ % @rows) * @columns) + (succ / @rows)\n        m[succ] = i == first ? temp : at(i)\n        succ = i\n        if succ <= first\n          break\n        end\n      end\n    end\n    first = first + 1\n  end\nend"}},{"id":"upper_triangular?-instance-method","html_id":"upper_triangular?-instance-method","name":"upper_triangular?","doc":"Returns true if the matrix is an upper triangular matrix.","summary":"<p>Returns true if the matrix is an upper triangular matrix.</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/plainas/matrix/blob/c15a51feb06cc0b02f69dc8da45e629e29f53449/src/matrix.cr#L471","source_link":"https://github.com/plainas/matrix/blob/c15a51feb06cc0b02f69dc8da45e629e29f53449/src/matrix.cr#L471","def":{"name":"upper_triangular?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if square?\nelse\n  raise(DimensionMismatch.new)\nend\neach(:strict_lower) do |e|\n  if e == 0\n  else\n    return false\n  end\nend\ntrue\n"}},{"id":"|(other:T|Number)-instance-method","html_id":"|(other:T|Number)-instance-method","name":"|","doc":null,"summary":null,"abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"T | Number"}],"args_string":"(other : T | Number)","source_link":"https://github.com/plainas/matrix/blob/c15a51feb06cc0b02f69dc8da45e629e29f53449/src/matrix.cr#L20","source_link":"https://github.com/plainas/matrix/blob/c15a51feb06cc0b02f69dc8da45e629e29f53449/src/matrix.cr#L20","def":{"name":"|","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"T | Number"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"map do |e|\n  e | other\nend"}}],"macros":[],"types":[{"html_id":"github.com/plainas/matrix/Matrix/DimensionMismatch","path":"Matrix/DimensionMismatch.html","kind":"class","full_name":"Matrix::DimensionMismatch","name":"DimensionMismatch","abstract":false,"superclass":{"html_id":"github.com/plainas/matrix/Exception","kind":"class","full_name":"Exception","name":"Exception"},"ancestors":[{"html_id":"github.com/plainas/matrix/Exception","kind":"class","full_name":"Exception","name":"Exception"},{"html_id":"github.com/plainas/matrix/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/plainas/matrix/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"matrix.cr","line_number":8,"url":"https://github.com/plainas/matrix/blob/c15a51feb06cc0b02f69dc8da45e629e29f53449/src/matrix.cr"}],"repository_name":"github.com/plainas/matrix","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/plainas/matrix/Matrix","kind":"struct","full_name":"Matrix(T)","name":"Matrix"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(msg=&quot;Matrixdimensionmismatch&quot;)-class-method","html_id":"new(msg=&amp;quot;Matrixdimensionmismatch&amp;quot;)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"msg","doc":null,"default_value":"\"Matrix dimension mismatch\"","external_name":"msg","restriction":""}],"args_string":"(msg = <span class=\"s\">&quot;Matrix dimension mismatch&quot;</span>)","source_link":"https://github.com/plainas/matrix/blob/c15a51feb06cc0b02f69dc8da45e629e29f53449/src/matrix.cr#L9","source_link":"https://github.com/plainas/matrix/blob/c15a51feb06cc0b02f69dc8da45e629e29f53449/src/matrix.cr#L9","def":{"name":"new","args":[{"name":"msg","doc":null,"default_value":"\"Matrix dimension mismatch\"","external_name":"msg","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(msg)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[],"macros":[],"types":[]},{"html_id":"github.com/plainas/matrix/Matrix/ItemIterator","path":"Matrix/ItemIterator.html","kind":"class","full_name":"Matrix::ItemIterator(T)","name":"ItemIterator","abstract":false,"superclass":{"html_id":"github.com/plainas/matrix/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"github.com/plainas/matrix/Iterator","kind":"module","full_name":"Iterator","name":"Iterator"},{"html_id":"github.com/plainas/matrix/Enumerable","kind":"module","full_name":"Enumerable","name":"Enumerable"},{"html_id":"github.com/plainas/matrix/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/plainas/matrix/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"matrix.cr","line_number":867,"url":"https://github.com/plainas/matrix/blob/c15a51feb06cc0b02f69dc8da45e629e29f53449/src/matrix.cr"}],"repository_name":"github.com/plainas/matrix","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[{"html_id":"github.com/plainas/matrix/Iterator","kind":"module","full_name":"Iterator","name":"Iterator"}],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/plainas/matrix/Matrix","kind":"struct","full_name":"Matrix(T)","name":"Matrix"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(matrix:Matrix(T),row=0,col=0,directive=:all)-class-method","html_id":"new(matrix:Matrix(T),row=0,col=0,directive=:all)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"matrix","doc":null,"default_value":"","external_name":"matrix","restriction":"Matrix(T)"},{"name":"row","doc":null,"default_value":"0","external_name":"row","restriction":""},{"name":"col","doc":null,"default_value":"0","external_name":"col","restriction":""},{"name":"directive","doc":null,"default_value":":all","external_name":"directive","restriction":""}],"args_string":"(matrix : Matrix(T), row = <span class=\"n\">0</span>, col = <span class=\"n\">0</span>, directive = <span class=\"n\">:all</span>)","source_link":"https://github.com/plainas/matrix/blob/c15a51feb06cc0b02f69dc8da45e629e29f53449/src/matrix.cr#L870","source_link":"https://github.com/plainas/matrix/blob/c15a51feb06cc0b02f69dc8da45e629e29f53449/src/matrix.cr#L870","def":{"name":"new","args":[{"name":"matrix","doc":null,"default_value":"","external_name":"matrix","restriction":"Matrix(T)"},{"name":"row","doc":null,"default_value":"0","external_name":"row","restriction":""},{"name":"col","doc":null,"default_value":"0","external_name":"col","restriction":""},{"name":"directive","doc":null,"default_value":":all","external_name":"directive","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = ItemIterator(T).allocate\n_.initialize(matrix, row, col, directive)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"next-instance-method","html_id":"next-instance-method","name":"next","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/plainas/matrix/blob/c15a51feb06cc0b02f69dc8da45e629e29f53449/src/matrix.cr#L873","source_link":"https://github.com/plainas/matrix/blob/c15a51feb06cc0b02f69dc8da45e629e29f53449/src/matrix.cr#L873","def":{"name":"next","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"skip = case @directive\nwhen :all\n  false\nwhen :diagonal\n  @row != @col\nwhen :off_diagonal\n  @row == @col\nwhen :lower\n  @row < @col\nwhen :strict_lower\n  @row <= @col\nwhen :upper\n  @row > @col\nwhen :strict_upper\n  @row >= @col\nelse\n  raise(ArgumentError.new)\nend\nno_more_rows? = (@row + 1) >= @matrix.row_count\nno_more_cols? = (@col + 1) >= @matrix.column_count\nif no_more_rows? && no_more_cols?\n  value = @matrix.at(@row, @col) do\n    return stop\n  end\n  @col = @col + 1\nelse\n  if (!no_more_rows?) && no_more_cols?\n    value = @matrix[@row, @col]\n    @col = 0\n    @row = @row + 1\n  else\n    value = @matrix[@row, @col]\n    @col = @col + 1\n  end\nend\nskip ? self.next : value\n"}},{"id":"rewind-instance-method","html_id":"rewind-instance-method","name":"rewind","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/plainas/matrix/blob/c15a51feb06cc0b02f69dc8da45e629e29f53449/src/matrix.cr#L903","source_link":"https://github.com/plainas/matrix/blob/c15a51feb06cc0b02f69dc8da45e629e29f53449/src/matrix.cr#L903","def":{"name":"rewind","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@row, @col = 0, 0\nself\n"}}],"macros":[],"types":[]},{"html_id":"github.com/plainas/matrix/Matrix/NotRegular","path":"Matrix/NotRegular.html","kind":"class","full_name":"Matrix::NotRegular","name":"NotRegular","abstract":false,"superclass":{"html_id":"github.com/plainas/matrix/Exception","kind":"class","full_name":"Exception","name":"Exception"},"ancestors":[{"html_id":"github.com/plainas/matrix/Exception","kind":"class","full_name":"Exception","name":"Exception"},{"html_id":"github.com/plainas/matrix/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/plainas/matrix/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"matrix.cr","line_number":14,"url":"https://github.com/plainas/matrix/blob/c15a51feb06cc0b02f69dc8da45e629e29f53449/src/matrix.cr"}],"repository_name":"github.com/plainas/matrix","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/plainas/matrix/Matrix","kind":"struct","full_name":"Matrix(T)","name":"Matrix"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(msg=&quot;Non-regularMatrix&quot;)-class-method","html_id":"new(msg=&amp;quot;Non-regularMatrix&amp;quot;)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"msg","doc":null,"default_value":"\"Non-regular Matrix\"","external_name":"msg","restriction":""}],"args_string":"(msg = <span class=\"s\">&quot;Non-regular Matrix&quot;</span>)","source_link":"https://github.com/plainas/matrix/blob/c15a51feb06cc0b02f69dc8da45e629e29f53449/src/matrix.cr#L15","source_link":"https://github.com/plainas/matrix/blob/c15a51feb06cc0b02f69dc8da45e629e29f53449/src/matrix.cr#L15","def":{"name":"new","args":[{"name":"msg","doc":null,"default_value":"\"Non-regular Matrix\"","external_name":"msg","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(msg)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[],"macros":[],"types":[]}]}]}}